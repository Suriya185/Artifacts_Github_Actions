name: Deploy website
on:
  push:
    branches:
      - main
  workflow_dispatch:
  
permissions:
  id-token: write
  contents: write
  checks: write
  packages: write
  
jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - name: Get code
        uses: actions/checkout@v3
      - name: Install dependencies
        run: npm ci
      - name: Lint code
        run: npm run lint
      - name: Test code
        run: npm run test
      - name: print
        run: echo '${{toJson(github)}}'        
        
  build:
    needs: test
    runs-on: ubuntu-latest
    outputs:
      script-file: ${{steps.build-filename.outputs.file-name}}
    steps:
      - name: Get code
        uses: actions/checkout@v3
      - name: Install dependencies
        run: npm ci
      - name: Build website
        run: npm run build
      - name: Get fileName
        id: build-filename
        run: find dist/assets/*.js -type f -execdir echo 'file-name={}' >> $GITHUB_OUTPUT ';'
      - name: Uploda Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: dist-files
          path: dist
  deploy:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Download Artifacts
        uses: actions/download-artifact@v4
        with:
          name: dist-files
      - name: Show file name
        run: echo "${{needs.build.outputs.script-file}}"   
      - name: Get the List of files in the dist-files
        run: ls
      - name: Deploy
        run: echo "Deploying..."

  versioning:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3
        
      - name: Print
        run: echo ${{github.ref}}
        
      - name: Fetch All Tags
        run: |
          # Fetch all tags from the repository
          git fetch --tags

      - name: Get Latest Tag
        id: get_latest_tag
        run: |
          # Get the latest tag
          LATEST_TAG=$(git describe --tags --abbrev=0 || echo "0.1.0")
          echo "LATEST_TAG=${LATEST_TAG}" >> $GITHUB_ENV
          echo "::set-output name=latest_tag::$LATEST_TAG"

      - name: Increment Version
        id: increment_version
        run: |
          # Extract version components
          VERSION=${LATEST_TAG:-0.1.0}
          MAJOR=$(echo $VERSION | cut -d '.' -f 1)
          MINOR=$(echo $VERSION | cut -d '.' -f 2)
          PATCH=$(echo $VERSION | cut -d '.' -f 3)
          NEW_PATCH=$((PATCH + 1))
          NEW_VERSION="$MAJOR.$MINOR.$NEW_PATCH"
          echo "NEW_VERSION=${NEW_VERSION}" >> $GITHUB_ENV
          echo "::set-output name=new_version::$NEW_VERSION"

      - name: Create New Tag
        run: |
          git config user.name "GitHub Actions"
          git config user.email "actions@github.com"
          git tag -a $NEW_VERSION -m "Incremented to $NEW_VERSION"
          git push origin $NEW_VERSION

